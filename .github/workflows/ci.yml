name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # Force npm to install optional dependencies
      npm_config_optional: true

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Remove npm cache to avoid optional dependency issues
          cache: ''

      - name: Clean and install dependencies
        run: |
          # Clear npm cache and remove node_modules
          npm cache clean --force
          rm -rf package-lock.json node_modules
          # Install dependencies with frozen lockfile disabled to regenerate properly
          npm install
          # Verify rollup installation
          npx rollup --version || npm install @rollup/rollup-linux-x64-gnu --no-save

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm run test

      - name: Generate coverage report
        run: npm run coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Build extension
        run: npm run build

      - name: Upload build artifacts
        if: matrix.node-version == 20
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: dist/
          retention-days: 30
